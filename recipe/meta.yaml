{% set version = "2.1.0" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}



package:
  name: torch-scatter
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/t/torch-scatter/torch_scatter-{{ version }}.tar.gz
  sha256: 3a7124c2a033552febbdc72407f7d4d8cb6dce465720e84ab831512e81c1d208

build:
  number: 3
  rpaths:
    - lib/
    - {{ SP_DIR }}/torch/lib
  missing_dso_whitelist:
    - '*/libcuda.*'  # [linux64 or ppc64le]
  skip: true  # [win]
  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see
  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491
  skip: true  # [cuda_compiler_version in ("10.2", "11.0", "11.1")]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    # https://conda-forge.org/docs/maintainer/knowledge_base.html?highlight=cuda#using-centos-7
    - sysroot_linux-64 2.17  # [linux64]
  host:
    - cudnn                           # [cuda_compiler_version != "None"]
    - nccl                            # [cuda_compiler_version != "None"]
    - pip
    - pytest-runner
    - python
    - pytorch
    - pytorch =*={{ torch_proc_type }}*
    - numpy
    - tqdm
    - scipy
    - networkx
    - scikit-learn
    - requests
    - pandas
    - rdflib
    - googledrivedownloader
    - jinja2
    - pyparsing
  run:
    - python
    - {{ pin_compatible('cudnn') }}  # [cuda_compiler_version != "None"]
    - {{ pin_compatible('numpy') }}
  run_constrained:
    # additional run constraint to the one from the (version-only) run_export;
    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner
    - pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - torch_scatter
    - torch_scatter.composite
  commands:
    - pip check
  requires:
    - pip

about:
  home: https://github.com/rusty1s/pytorch_scatter
  summary: PyTorch Extension Library of Optimized Scatter Operations
  license: MIT
  license_file: LICENSE

extra:
  recipe-maintainers:
    - sarthakpati
